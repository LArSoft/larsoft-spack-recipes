diff --git a/CMakeLists.txt b/CMakeLists.txt
index 4fc305c..a4fa32d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -10,10 +10,11 @@ cmake_minimum_required(VERSION 3.19 FATAL_ERROR)
 
 project(larpandora VERSION 09.10.02.02 LANGUAGES CXX)
 
-# cetbuildtools contains our cmake modules
-find_package(cetbuildtools REQUIRED)
+set(larpandora_FW_DIR fw)
 
-list(APPEND CMAKE_MODULE_PATH $ENV{CANVAS_ROOT_IO_DIR}/Modules $ENV{ART_DIR}/Modules)
+find_package( cetmodules REQUIRED )
+find_package( canvas_root_io )
+find_package( art )
 
 include(CetCMakeEnv)
 cet_cmake_env()
@@ -27,23 +28,27 @@ cet_set_compiler_flags(DIAGS CAUTIOUS
 cet_report_compiler_flags()
 
 # these are minimum required versions, not the actual product versions
-find_ups_product( eigen )
-find_ups_product( larcoreobj )
-find_ups_product( larcorealg )
-find_ups_product( larcore )
-find_ups_product( lardataobj )
-find_ups_product( lardataalg )
-find_ups_product( lardata )
-find_ups_product( larevt )
-find_ups_product( larsim )
-find_ups_product( larreco )
-find_ups_product( nug4)
-find_ups_product( art )
-find_ups_product(art_root_io)
-find_ups_product( pandora )
-find_ups_product( larpandoracontent )
-find_ups_product( postgresql )
-find_ups_product(messagefacility)
+find_package( larcoreobj )
+find_package( larcorealg )
+find_package( larcore )
+find_package( lardataobj )
+find_package( lardataalg )
+find_package( lardata )
+find_package( larevt )
+find_package( larsim )
+find_package( larreco )
+find_package( nug4 )
+find_package( nusimdata )
+find_package( art )
+find_package( art_root_io )
+find_package( pandora )
+find_package( PandoraSDK )
+find_package( PandoraMonitoring )
+find_package( messagefacility )
+find_package( PostgreSQL )
+find_package( Eigen3 )
+find_package( Boost COMPONENTS system )
+find_package( larpandoracontent )
 
 # macros for dictionary and simple_plugin
 include(ArtDictionary)
@@ -58,6 +63,11 @@ cet_find_library( PANDORAMONITORING NAMES PandoraMonitoring PATHS ENV PANDORA_LI
 set( mrb_source $ENV{MRB_SOURCE} )
 
 
+message("LARPANDORACONTENT_INC '${LARPANDORACONTENT_INC}' LArPandoraContent_INCLUDE_DIRS '${LArPandoraContent_INCLUDE_DIRS}'")
+if( NOT LARPANDORACONTENT_INC )
+set(LARPANDORACONTENT_INC "${LArPandoraContent_INCLUDE_DIRS}")
+endif()
+
 # This logic does not work with cetbuildtools 8
 ##if( LARPANDORACONTENT_INC )
   #message(STATUS "larpandora: found LARPANDORACONTENT_INC: $ENV{LARPANDORACONTENT_INC}")
@@ -75,10 +85,11 @@ set( mrb_source $ENV{MRB_SOURCE} )
 
 # source
 add_subdirectory(larpandora)
-
 # ups - table and config files
+if(WANT_UPS)
 add_subdirectory(ups)
+endif()
 
 # packaging utility
-include(UseCPack)
-
+#include(UseCPack)
+cet_cmake_config()
diff --git a/larpandora/LArPandoraAnalysis/CMakeLists.txt b/larpandora/LArPandoraAnalysis/CMakeLists.txt
index 38ec6b9..dec1787 100644
--- a/larpandora/LArPandoraAnalysis/CMakeLists.txt
+++ b/larpandora/LArPandoraAnalysis/CMakeLists.txt
@@ -1,17 +1,18 @@
 art_make(
 
-          LIB_LIBRARIES larcorealg_Geometry
-                        larcore_Geometry_Geometry_service
-                        larsim_Simulation lardataobj_Simulation
-                        lardataobj_RawData
-                        lardataobj_RecoBase
-                        lardataobj_AnalysisBase
-                        lardata_Utilities
-                        nusimdata_SimulationBase
+          LIB_LIBRARIES larcorealg::Geometry
+                        larcore::Geometry_Geometry_service
+                        larsim::Simulation lardataobj::Simulation
+                        lardataobj::RawData
+                        lardataobj::RecoBase
+                        lardataobj::AnalysisBase
+                        lardata::Utilities
+                        nusimdata::SimulationBase
                         art::Framework_Core
                         art::Framework_Principal
                         art::Framework_Services_Registry
-                        ${ART_FRAMEWORK_SERVICES_BASIC}
+                        art::Framework_Services_Registry
+                        art::Framework_Services_FileServiceInterfaces
                         art_root_io::tfile_support ROOT::Core
                         art_root_io::TFileService_service
                         art::Persistency_Common
@@ -19,11 +20,14 @@ art_make(
                         art::Utilities
                         canvas::canvas
                         messagefacility::MF_MessageLogger
-
                         fhiclcpp::fhiclcpp
                         cetlib::cetlib cetlib_except
-                        ${ROOT_BASIC_LIB_LIST}
-           MODULE_LIBRARIES larpandora_LArPandoraInterface
+                        ROOT::Hist
+                        ROOT::Physics
+                        ROOT::MathCore
+                        ROOT::Tree
+                        ROOT::Core
+           MODULE_LIBRARIES larpandora::LArPandoraInterface ROOT::Core ROOT::Tree
           )
 
 install_headers()
diff --git a/larpandora/LArPandoraEventBuilding/CMakeLists.txt b/larpandora/LArPandoraEventBuilding/CMakeLists.txt
index 012d49c..11a21ea 100644
--- a/larpandora/LArPandoraEventBuilding/CMakeLists.txt
+++ b/larpandora/LArPandoraEventBuilding/CMakeLists.txt
@@ -1,32 +1,31 @@
-include_directories( $ENV{PANDORA_INC} )
-include_directories( $ENV{LARPANDORACONTENT_INC} )
-include_directories( $ENV{EIGEN_INC} )
+include_directories( ${PandoraSDK_INCLUDE_DIRS} )
+include_directories( ${PandoraMonitoring_INCLUDE_DIRS} )
+include_directories( ${EIGEN3_INCLUDE_DIRS} )
+include_directories( ${LArPandoraContent_INCLUDE_DIRS} )
 
 add_subdirectory(LArPandoraShower)
 
 art_make( EXCLUDE SimpleNeutrinoId_tool.cc
-          LIB_LIBRARIES larcorealg_Geometry
-                        larcore_Geometry_Geometry_service
-                        larsim_Simulation lardataobj_Simulation
-                        lardataobj_RawData
-                        lardataobj_RecoBase
-                        lardataobj_AnalysisBase
-                        lardata_ArtDataHelper
-                        lardata_Utilities
-                        larreco_RecoAlg_ClusterRecoUtil
-                        larreco_RecoAlg
-                        larreco_ClusterFinder
-                        larreco_Calorimetry
-                        PANDORASDK
-                        PANDORAMONITORING
-                        LArPandoraContent
-                        larpandora_LArPandoraInterface
-                        larpandora_LArPandoraInterface_Detectors
-                        nusimdata_SimulationBase
+          LIB_LIBRARIES larcorealg::Geometry
+                        larcore::Geometry_Geometry_service
+                        larsim::Simulation lardataobj::Simulation
+                        lardataobj::RawData
+                        lardataobj::RecoBase
+                        lardataobj::AnalysisBase
+                        lardata::ArtDataHelper
+                        lardata::Utilities
+                        larreco::RecoAlg_ClusterRecoUtil
+                        larreco::RecoAlg
+                        larreco::ClusterFinder
+                        larreco::Calorimetry
+                        ${PandoraSDK_LIBRARIES}
+                        ${PandoraMonitoring_LIBRARIES}
+                        larpandoracontent::LArPandoraContent
+                        larpandora::LArPandoraInterface
+                        nusimdata::SimulationBase
                         art::Framework_Core
                         art::Framework_Principal
                         art::Framework_Services_Registry
-                        ${ART_FRAMEWORK_SERVICES_BASIC}
                         art_root_io::tfile_support ROOT::Core
                         art_root_io::TFileService_service
                         art::Persistency_Common
@@ -35,17 +34,22 @@ art_make( EXCLUDE SimpleNeutrinoId_tool.cc
                         canvas::canvas
                         messagefacility::MF_MessageLogger
                         fhiclcpp::fhiclcpp
-                        cetlib::cetlib cetlib_except
-                        ${Boost_SYSTEM_LIBRARY}
-                        ${Boost_FILESYSTEM_LIBRARY}
+                        cetlib::cetlib cetlib_except::cetlib_except
+                        Boost::system
+                        Boost::filesystem
                         ROOT::Geom
-                        ${ROOT_BASIC_LIB_LIST}
+                        ROOT::Graf3d
+                        ROOT::Gpad
+                        ROOT::Physics
+                        ROOT::MathCore
+                        ROOT::Hist
+                        ROOT::Tree
+                        ROOT::Core
                         ROOT::GenVector
-          MODULE_LIBRARIES larpandora_LArPandoraEventBuilding
+          MODULE_LIBRARIES larpandora::LArPandoraEventBuilding
           )
 
-      simple_plugin(SimpleNeutrinoId "tool" larpandora_LArPandoraEventBuilding)
+      simple_plugin(SimpleNeutrinoId "tool" LIBRARIES larpandora::LArPandoraEventBuilding)
 
 install_headers()
 install_fhicl()
-install_source()
diff --git a/larpandora/LArPandoraEventBuilding/LArPandoraShower/Algs/CMakeLists.txt b/larpandora/LArPandoraEventBuilding/LArPandoraShower/Algs/CMakeLists.txt
index efcf010..d24934e 100644
--- a/larpandora/LArPandoraEventBuilding/LArPandoraShower/Algs/CMakeLists.txt
+++ b/larpandora/LArPandoraEventBuilding/LArPandoraShower/Algs/CMakeLists.txt
@@ -1,9 +1,15 @@
 art_make(LIB_LIBRARIES
-  larcorealg_Geometry
-  ${ROOT_BASIC_LIB_LIST}
+  larcorealg::Geometry
   canvas::canvas
   fhiclcpp::fhiclcpp
   cetlib_except::cetlib_except
+  ROOT::Graf3d
+  ROOT::Gpad
+  ROOT::Physics
+  ROOT::MathCore
+  ROOT::Hist
+  ROOT::Tree
+  ROOT::Core
   messagefacility::MF_MessageLogger
   art::Framework_Core
   art::Framework_Principal
@@ -12,11 +18,11 @@ art_make(LIB_LIBRARIES
   art_root_io::TFileService_service
   art::Persistency_Provenance
   art::Utilities
-  nusimdata_SimulationBase
-  lardataobj_RecoBase
-  larsim_MCCheater_BackTrackerService_service
-  larsim_MCCheater_ParticleInventoryService_service
-  lardataalg_DetectorInfo
+  nusimdata::SimulationBase
+  lardataobj::RecoBase
+  larsim::MCCheater_BackTrackerService_service
+  larsim::MCCheater_ParticleInventoryService_service
+  lardataalg::DetectorInfo
   )
 
 install_headers()
diff --git a/larpandora/LArPandoraEventBuilding/LArPandoraShower/CMakeLists.txt b/larpandora/LArPandoraEventBuilding/LArPandoraShower/CMakeLists.txt
index f8adaad..9b78659 100644
--- a/larpandora/LArPandoraEventBuilding/LArPandoraShower/CMakeLists.txt
+++ b/larpandora/LArPandoraEventBuilding/LArPandoraShower/CMakeLists.txt
@@ -3,8 +3,26 @@ add_subdirectory(Algs)
 
 art_make(
   MODULE_LIBRARIES
-  larpandora_LArPandoraEventBuilding
-  larpandora_LArPandoraEventBuilding_LArPandoraShower_Algs
+  larpandora::LArPandoraEventBuilding
+  larpandora::LArPandoraEventBuilding_LArPandoraShower_Algs
+  ROOT::Graf3d
+  ROOT::Gpad
+  ROOT::Physics
+  ROOT::MathCore
+  ROOT::Hist
+  ROOT::Tree
+  ROOT::Core
+  canvas::canvas
+  fhiclcpp::fhiclcpp fhiclcpp::types
+  cetlib_except::cetlib_except
+  messagefacility::MF_MessageLogger
+  art::Framework_Core
+  art::Framework_Principal
+  art::Framework_Services_Registry
+  art_root_io::tfile_support
+  art_root_io::TFileService_service
+  art::Persistency_Provenance
+  art::Utilities
   )
 
 
diff --git a/larpandora/LArPandoraEventBuilding/LArPandoraShower/Tools/CMakeLists.txt b/larpandora/LArPandoraEventBuilding/LArPandoraShower/Tools/CMakeLists.txt
index d907b00..112febe 100644
--- a/larpandora/LArPandoraEventBuilding/LArPandoraShower/Tools/CMakeLists.txt
+++ b/larpandora/LArPandoraEventBuilding/LArPandoraShower/Tools/CMakeLists.txt
@@ -1,10 +1,28 @@
 add_subdirectory(Cheating)
 
 art_make(TOOL_LIBRARIES
-  larpandora_LArPandoraEventBuilding_LArPandoraShower_Algs
-  larreco_Calorimetry
-  larpandora_LArPandoraInterface_Detectors
+  larpandora::LArPandoraEventBuilding_LArPandoraShower_Algs
+  larreco::Calorimetry
+  larpandora::LArPandoraInterface_Detectors
   LArPandoraContent
+  ROOT::Graf3d
+  ROOT::Gpad
+  ROOT::Physics
+  ROOT::MathCore
+  ROOT::Hist
+  ROOT::Tree
+  ROOT::Core
+  canvas::canvas
+  fhiclcpp::fhiclcpp fhiclcpp::types
+  cetlib_except::cetlib_except
+  messagefacility::MF_MessageLogger
+  art::Framework_Core
+  art::Framework_Principal
+  art::Framework_Services_Registry
+  art_root_io::tfile_support
+  art_root_io::TFileService_service
+  art::Persistency_Provenance
+  art::Utilities
   )
 
 install_headers()
diff --git a/larpandora/LArPandoraEventBuilding/LArPandoraShower/Tools/Cheating/CMakeLists.txt b/larpandora/LArPandoraEventBuilding/LArPandoraShower/Tools/Cheating/CMakeLists.txt
index d62a139..1768611 100644
--- a/larpandora/LArPandoraEventBuilding/LArPandoraShower/Tools/Cheating/CMakeLists.txt
+++ b/larpandora/LArPandoraEventBuilding/LArPandoraShower/Tools/Cheating/CMakeLists.txt
@@ -1,5 +1,5 @@
 art_make(TOOL_LIBRARIES
-  larpandora_LArPandoraEventBuilding_LArPandoraShower_Algs
+  larpandora::LArPandoraEventBuilding_LArPandoraShower_Algs
   )
 
 install_headers()
diff --git a/larpandora/LArPandoraInterface/CMakeLists.txt b/larpandora/LArPandoraInterface/CMakeLists.txt
index 684d2af..f5d5098 100644
--- a/larpandora/LArPandoraInterface/CMakeLists.txt
+++ b/larpandora/LArPandoraInterface/CMakeLists.txt
@@ -1,26 +1,28 @@
-include_directories( $ENV{PANDORA_INC} )
-include_directories( $ENV{LARPANDORACONTENT_INC} )
+include_directories( ${PandoraSDK_INCLUDE_DIRS} )
+include_directories( ${PandoraMonitoring_INCLUDE_DIRS} )
+include_directories( ${EIGEN3_INCLUDE_DIRS} )
+include_directories( ${LArPandoraContent_INCLUDE_DIRS} )
 
 set(CORE_LIB_LIST
-    larpandora_LArPandoraInterface_Detectors
-    larcorealg_Geometry
-    larcore_Geometry_Geometry_service
-    larsim_Simulation lardataobj_Simulation
-    larsim_MCCheater_ParticleInventoryService_service
-    lardataalg_DetectorInfo
-    lardataobj_RawData
-    lardataobj_RecoBase
-    lardataobj_AnalysisBase
-    lardata_ArtDataHelper
-    lardata_Utilities
-    larreco_RecoAlg_ClusterRecoUtil
-    larreco_RecoAlg
-    larreco_ClusterFinder
-    larreco_Calorimetry
-    PANDORASDK
-    PANDORAMONITORING
-    LArPandoraContent
-    nusimdata_SimulationBase
+    larpandora::LArPandoraInterface_Detectors
+    larcorealg::Geometry
+    larcore::Geometry_Geometry_service
+    larsim::Simulation lardataobj::Simulation
+    larsim::MCCheater_ParticleInventoryService_service
+    lardataalg::DetectorInfo
+    lardataobj::RawData
+    lardataobj::RecoBase
+    lardataobj::AnalysisBase
+    lardata::ArtDataHelper
+    lardata::Utilities
+    larreco::RecoAlg_ClusterRecoUtil
+    larreco::RecoAlg
+    larreco::ClusterFinder
+    larreco::Calorimetry
+    ${PandoraSDK_LIBRARIES}
+    ${PandoraMonitoring_LIBRARIES}
+    larpandoracontent::LArPandoraContent
+    nusimdata::SimulationBase
     art::Framework_Core
     art::Framework_Principal
     art::Framework_Services_Registry
@@ -32,8 +34,8 @@ set(CORE_LIB_LIST
     canvas::canvas
     messagefacility::MF_MessageLogger
     fhiclcpp::fhiclcpp
-    cetlib::cetlib cetlib_except
-    ROOT::Geom)
+    cetlib::cetlib cetlib_except::cetlib_except
+    ROOT::Geom ROOT::Physics)
 
 option(PANDORA_LIBTORCH "Flag for building with Pandora's LibTorch-aware algorithms" ON)
 if( ${PANDORA_LIBTORCH} AND DEFINED ENV{LIBTORCH_DIR})
@@ -41,12 +43,12 @@ if( ${PANDORA_LIBTORCH} AND DEFINED ENV{LIBTORCH_DIR})
     add_definitions("-DLIBTORCH_DL")
     art_make(
         LIB_LIBRARIES ${CORE_LIB_LIST} larpandoracontent::LArPandoraDLContent
-        MODULE_LIBRARIES larpandora_LArPandoraInterface)
+        MODULE_LIBRARIES larpandora::LArPandoraInterface)
 else()
     message( STATUS "Building without deep learning support" )
     art_make(
         LIB_LIBRARIES ${CORE_LIB_LIST}
-        MODULE_LIBRARIES larpandora_LArPandoraInterface)
+        MODULE_LIBRARIES larpandora::LArPandoraInterface)
 endif()
 
 install_headers()
diff --git a/larpandora/LArPandoraInterface/Detectors/CMakeLists.txt b/larpandora/LArPandoraInterface/Detectors/CMakeLists.txt
index 9d6941e..c3f822f 100644
--- a/larpandora/LArPandoraInterface/Detectors/CMakeLists.txt
+++ b/larpandora/LArPandoraInterface/Detectors/CMakeLists.txt
@@ -1,6 +1,6 @@
 art_make( EXCLUDE SimpleNeutrinoId_tool.cc
-          LIB_LIBRARIES larcorealg_Geometry
-                        larcore_Geometry_Geometry_service
+          LIB_LIBRARIES larcorealg::Geometry
+                        larcore::Geometry_Geometry_service
                         PANDORASDK
                         PANDORAMONITORING
         )
